name: Deploy Static Website to S3

on:
  push:
    branches:
      - main  # Trigger the workflow on pushes to the 'main' branch
  pull_request:
    branches:
      - main  # Trigger the workflow on pull requests to the 'main' branch

permissions:
  id-token: write  # Allow GitHub Actions to use OIDC to authenticate with AWS
  contents: read   # Allow reading repository contents

jobs:
  deploy:
    name: Deploy to S3
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up AWS credentials using OIDC
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::445567102851:role/git-action-role
          aws-region: us-east-1

      # Step 3: Check if AWS CLI is installed, if not install it
      - name: Check AWS CLI installation
        run: |
          if ! command -v aws &> /dev/null
          then
            echo "AWS CLI not found, installing..."
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
          else
            echo "AWS CLI is already installed"
          fi

      # Step 4: Sync the contents to S3
      - name: Sync files to S3
        run: |
          aws s3 sync . s3://project-s3-bucket-2test33-test3/ --exclude ".git/*" --exclude ".github/*" --exclude "README.md" --exclude "deploy-static-website.yml" --acl public-read
          
      # Step 5: Invalidate CloudFront cache
      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id EO2MJVAXT0NXH --paths "/*"
